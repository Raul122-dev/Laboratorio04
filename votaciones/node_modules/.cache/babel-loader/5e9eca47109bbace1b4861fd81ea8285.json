{"ast":null,"code":"var _jsxFileName = \"K:\\\\Proyecto react\\\\Laboratorio 04\\\\votaciones\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n\n  const ClickGood = () => {\n    setGood(good + 1);\n    setAll(good + neutral + bad + 1);\n    setAverage((good - bad) / all);\n  };\n\n  const ClickNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(good + neutral + bad + 1);\n  };\n\n  const ClickBad = () => {\n    setBad(bad + 1);\n    setAll(good + neutral + bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ClickGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ClickNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ClickBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4gnNStmv2er021Bn8O2GURCE9pg=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["K:/Proyecto react/Laboratorio 04/votaciones/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","average","setAverage","positive","setPositive","ClickGood","ClickNeutral","ClickBad","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMe,SAAS,GAAG,MAAM;AACtBX,IAAAA,OAAO,CAAED,IAAI,GAAG,CAAT,CAAP;AACAO,IAAAA,MAAM,CAAEP,IAAI,GAAGE,OAAP,GAAiBE,GAAjB,GAAuB,CAAzB,CAAN;AACAK,IAAAA,UAAU,CAAE,CAACT,IAAI,GAAGI,GAAR,IAAeE,GAAjB,CAAV;AACD,GAJD;;AAKA,QAAMO,YAAY,GAAG,MAAM;AACzBV,IAAAA,UAAU,CAAED,OAAO,GAAG,CAAZ,CAAV;AACAK,IAAAA,MAAM,CAAEP,IAAI,GAAGE,OAAP,GAAiBE,GAAjB,GAAuB,CAAzB,CAAN;AACD,GAHD;;AAIA,QAAMU,QAAQ,GAAG,MAAM;AACrBT,IAAAA,MAAM,CAAED,GAAG,GAAG,CAAR,CAAN;AACAG,IAAAA,MAAM,CAAEP,IAAI,GAAGE,OAAP,GAAiBE,GAAjB,GAAuB,CAAzB,CAAN;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEQ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,0BAASd,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,6BAAYE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,yBAAQE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,yBAAQE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,6BAAYE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,8BAAaE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtCD;;GAAMX,G;;KAAAA,G;AAwCND,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  const ClickGood = () => {\n    setGood( good + 1 )\n    setAll( good + neutral + bad + 1)\n    setAverage( (good - bad) / all )\n  }\n  const ClickNeutral = () => {\n    setNeutral( neutral + 1 )\n    setAll( good + neutral + bad + 1)\n  }\n  const ClickBad = () => {\n    setBad( bad + 1 )\n    setAll( good + neutral + bad + 1)\n  }\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <button onClick={ClickGood}>good</button>\n      <button onClick={ClickNeutral}>neutral</button>\n      <button onClick={ClickBad}>bad</button>\n      <h1>Statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      <p>average {average}</p>\n      <p>positive {positive}%</p>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}